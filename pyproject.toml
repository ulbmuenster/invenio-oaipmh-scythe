# hatch
# Ref: https://hatch.pypa.io/latest/config/metadata/
# ------------------------------------------------------------------------------

[project]
name = "oaipmh-scythe"
description = "A Scythe for harvesting OAI-PMH repositories."
readme = "README.md"
keywords = [
  "metadata",
  "oai-pmh",
  "oai-pmh-client",
]
license = {text = "BSD-3-Clause"}
authors = [
  { name = "Heinz-Alexander FÃ¼tterer" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Text Processing :: Markup :: XML",
  "Typing :: Typed",
]
dynamic = [
  "version",
]
dependencies = [
  "httpx>=0.25",
  "xsdata[cli,lxml]", # TODO: remove cli extra
]
[project.optional-dependencies]
dev = [
  "pre-commit~=3.6",
]
docs = [
  "mkdocs~=1.5",
  "mkdocs-include-markdown-plugin~=6.0",
  "mkdocs-material~=9.5",
  "mkdocstrings[python]~=0.24",
]
release = [
  "python-semantic-release~=9.1",
]
test = [
  "pytest~=8.0",
  "pytest-cov~=5.0",
  "pytest-mock~=3.12",
  "pytest-randomly~=3.15",
  "pytest-recording~=0.13",
  "pytest-xdist~=3.5",
  "respx~=0.20",
]
[project.urls]
Changelog = "https://github.com/afuetterer/oaipmh-scythe/blob/main/CHANGELOG.md"
Documentation = "https://afuetterer.github.io/oaipmh-scythe"
Issues = "https://github.com/afuetterer/oaipmh-scythe/issues"
Repository = "https://github.com/afuetterer/oaipmh-scythe.git"

[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[tool.hatch.build.targets.sdist]
include = [
  "src",
  "CHANGELOG.md",
]
exclude = [
  "src/oaipmh_scythe/models/**/*.md",
  "src/oaipmh_scythe/models/**/*.xml",
]

[tool.hatch.build.targets.wheel]
packages = ["src/oaipmh_scythe"]

[tool.hatch.version]
path = "src/oaipmh_scythe/__about__.py"

[tool.hatch.envs.default]
features = ["dev", "test"]
post-install-commands = ["pre-commit install"]
[tool.hatch.envs.default.scripts]
check = ["lint", "typecheck"]
lint = "SKIP=mypy pre-commit run --all-files --color=always --show-diff-on-failure"
typecheck = "pre-commit run --all-files --color=always --show-diff-on-failure mypy"
test = "pytest {args:tests}"
cov = "pytest --cov {args:src}"
cov-report-markdown = "python -m coverage report --format=markdown {args:>coverage.md}"
cov-total = """
  python -m coverage json --quiet
  python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])"
"""

[tool.hatch.envs.docs]
features = ["docs"]
template = "docs"
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --config-file=docs/mkdocs.yml"
serve = "mkdocs serve --verbose --config-file=docs/mkdocs.yml"
deploy = "mkdocs gh-deploy --force --config-file=docs/mkdocs.yml"

[tool.hatch.envs.release]
features = ["release"]
template = "release"
[tool.hatch.envs.release.scripts]
next-version = "semantic-release version --print"
update-citation = """
  sed -i "s/^version: .*/version: $(semantic-release version --print)/" CITATION.cff
  sed -i "s/^date-released: .*/date-released: $(date "+%Y-%m-%d")/" CITATION.cff
  cat CITATION.cff
"""

# ruff
# Ref: https://docs.astral.sh/ruff/configuration/
# ------------------------------------------------------------------------------

[tool.ruff]
line-length = 120
src = ["src", "tests"]

[tool.ruff.format]
# Ref: https://docs.astral.sh/ruff/settings/#format
docstring-code-format = true

[tool.ruff.lint]
# Ref: https://docs.astral.sh/ruff/rules/
extend-select = [
  "A",    # flake8-builtins
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "D",    # pydocstyle
  "I",    # isort
  "G",    # flake8-logging-format
  "PERF", # perflint-perf
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # ruff
  "SIM",  # flake8-simplify
  "TCH",  # flake8-type-checking
  "T20",  # flake8-print
  "UP",   # pyupgrade
  "W",    # pycodestyle
  "YTT",  # flake8-2020
]
ignore = [
  "D105", # undocumented-magic-method
  "D107", # undocumented-public-init
]
unfixable = [
  "F401", # unused-import
]
isort.known-first-party = ["oaipmh_scythe"]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"src/oaipmh_scythe/__about__.py" = [
  "D100", # undocumented-public-module
]
"src/oaipmh_scythe/client.py" = [
  "PLR0913", # too-many-arguments
]
"src/oaipmh_scythe/models/*" = [
  "D101",   # undocumented-public-class
  "D106",   # undocumented-public-nested-class
  "D205",   # blank-line-after-summary
  "D415",   # ends-in-punctuation
  "RUF002", # ambiguous-unicode-character-docstring
  "TCH002", # typing-only-third-party-import
]
"tests/*" = [
  "D100",     # undocumented-public-module
  "D103",     # undocumented-public-function
  "PLR2004",  # magic-value-comparison
]

# sp-repo-review
# Ref: https://github.com/scientific-python/cookie/tree/main#list-of-checks
# ------------------------------------------------------------------------------

[tool.repo-review]
ignore = [
  # Pre-commit
  "PC111",  # blacken-docs
  "PC160",  # codespell
  "PC170",  # pygrep hooks
  "PC180",  # prettier
  "MY",     # mypy
  "RTD",    # read the docs
]

# pytest
# Ref: https://docs.pytest.org/en/stable/customize.html
# ------------------------------------------------------------------------------

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
filterwarnings = ["error"]
log_cli_level = "INFO"
xfail_strict = true
testpaths = "tests"

# coverage.py
# Ref: https://coverage.readthedocs.io/en/latest/config.html
# ------------------------------------------------------------------------------

[tool.coverage.run]
branch = true
parallel = true
source = ["oaipmh_scythe"]
omit = [
  "__about__.py",
  "src/oaipmh_scythe/models/datacite.py",
]

[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:",
  "@abstractmethod",
]
fail_under = 90
show_missing = true
skip_covered = true
skip_empty = true

# mypy
# Ref: https://mypy.readthedocs.io/en/stable/config_file.html#using-a-pyproject-toml-file
# ------------------------------------------------------------------------------

[tool.mypy]
python_version = "3.10"
pretty = true
show_column_numbers = true
show_error_context = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

# licensecheck
# Ref: https://github.com/FHPythonUtils/LicenseCheck/#example-1-pyprojecttoml
# ------------------------------------------------------------------------------

[tool.licensecheck]
using = "PEP631"
format = "ansi"

# python-semantic-release
# Ref: https://python-semantic-release.readthedocs.io/en/latest/configuration.html#settings
# ------------------------------------------------------------------------------

[tool.semantic_release]
commit_message = "chore: release {version}\n\nAutomatically generated by python-semantic-release [skip ci]"
logging_use_named_masks = true
major_on_zero = false
tag_format = "{version}"
version_variables = [
  "src/oaipmh_scythe/__about__.py:__version__",
]
build_command = """
python -m pip install build[uv]
python -m build --installer=uv
"""
changelog.template_dir = ".github/templates"
changelog.environment.keep_trailing_newline = true

# typos
# Ref: https://github.com/crate-ci/typos/blob/master/docs/reference.md
# ------------------------------------------------------------------------------

[tool.typos]
# add "spellchecker:disable-line" to ignore specific lines
default.extend-ignore-re = ["(?Rm)^.*# spellchecker:disable-line$"]
